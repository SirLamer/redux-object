module.exports=function(e){function r(n){if(t[n])return t[n].exports;var i=t[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}var t={};return r.m=e,r.c=t,r.p="",r(0)}([function(e,r,t){e.exports=t(1)},function(e,r){"use strict";function t(e,r,t,i){var o=i.ignoreLinks,a=i.parentTree,u=r.relationships[t];if("undefined"!=typeof u.data)return Array.isArray(u.data)?u.data.map(function(r){return a.indexOf(r.type)!==-1?null:n(e,r.type,r.id,i)}):null===u.data||a.indexOf(u.data.type)!==-1?null:n(e,u.data.type,u.data.id,i);if(!o&&u.links)throw new Error("Remote lazy loading is not supported (see: https://github.com/yury-dymov/json-api-normalizer/issues/2). To disable this error, include option 'ignoreLinks: true' in the build function like so: build(reducer, type, id, { ignoreLinks: true })");return[]}function n(e,r){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},u={eager:!1,ignoreLinks:!1,parentTree:[]},s=i({},u,a),d=s.eager;if(!e[r])return null;if(null===o||Array.isArray(o)){var l=o||Object.keys(e[r]);return l.map(function(t){return n(e,r,t,s)})}var p=o.toString(),c={},f=e[r][p];return f?(f.id&&(c.id=f.id),Object.keys(f.attributes).forEach(function(e){c[e]=f.attributes[e]}),f.relationships&&Object.keys(f.relationships).forEach(function(n){d?(s.parentTree=[].concat(s.parentTree),s.parentTree.push(r),c[n]=t(e,f,n,s)):Object.defineProperty(c,n,{get:function(){var r="__"+n;return c[r]?c[r]:(c[r]=t(e,f,n,s),c[r])}})}),"undefined"==typeof c.id&&(c.id=p),c):null}Object.defineProperty(r,"__esModule",{value:!0});var i=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e};r.default=n}]);