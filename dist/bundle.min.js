module.exports=function(e){function r(n){if(t[n])return t[n].exports;var i=t[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}var t={};return r.m=e,r.c=t,r.p="",r(0)}([function(e,r,t){e.exports=t(1)},function(e,r){"use strict";function t(e,r){return r?""+e+r:null}function n(e,r,t,n,a){var o=n.ignoreLinks,u=n.parentTree,d=r.relationships[t];if("undefined"!=typeof d.data)return Array.isArray(d.data)?d.data.map(function(r){return u.indexOf(r.type)!==-1?r:i(e,r.type,r.id,n,a)||r}):null===d.data||u.indexOf(d.data.type)!==-1?d.data:i(e,d.data.type,d.data.id,n,a)||d.data;if(!o&&d.links)throw new Error("Remote lazy loading is not supported (see: https://github.com/yury-dymov/json-api-normalizer/issues/2). To disable this error, include option 'ignoreLinks: true' in the build function like so: build(reducer, type, id, { ignoreLinks: true })");return[]}function i(e,r){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s={eager:!1,ignoreLinks:!1,parentTree:[],includeType:!1},l=a({},s,u),p=l.eager,c=l.includeType;if(!e[r])return null;if(null===o||Array.isArray(o)){var f=o||Object.keys(e[r]);return f.map(function(t){return i(e,r,t,l,d)})}var y=o.toString(),v=t(r,y),h=d[v];if(h)return h;var g={},b=e[r][y];return b?(b.id&&(g.id=b.id),Object.keys(b.attributes).forEach(function(e){g[e]=b.attributes[e]}),c&&!g.type&&(g.type=r),d[v]=g,b.relationships&&Object.keys(b.relationships).forEach(function(t){if(p){var i=[].concat(l.parentTree);i.push(r);var o=a({},l,{parentTree:i});g[t]=n(e,b,t,o,d)}else Object.defineProperty(g,t,{get:function(){var r="__"+t;return g[r]?g[r]:(g[r]=n(e,b,t,l,d),g[r])}})}),"undefined"==typeof g.id&&(g.id=y),g):null}Object.defineProperty(r,"__esModule",{value:!0});var a=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e};r.default=i}]);