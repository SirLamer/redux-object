module.exports=function(e){function t(n){if(r[n])return r[n].exports;var i=r[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){e.exports=r(1)},function(e,t){"use strict";function r(e,t){return t?""+e+t:null}function n(e,t,r,n,i){var o=n.ignoreLinks,u=t.relationships[r];if("undefined"!=typeof u.data)return Array.isArray(u.data)?u.data.map(function(t){return a(e,t.type,t.id,n,i)||t}):null===u.data?null:a(e,u.data.type,u.data.id,n,i)||u.data;if(!o&&u.links)throw new Error("Remote lazy loading is not supported (see: https://github.com/yury-dymov/json-api-normalizer/issues/2). To disable this error, include option 'ignoreLinks: true' in the build function like so: build(reducer, type, id, { ignoreLinks: true })")}function i(e,t,r){t.relationships[r].meta&&(e.meta||(e.meta={}),e.meta.relationships||(e.meta.relationships={}),e.meta.relationships[r]=t.relationships[r].meta)}function a(e,t){var u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},d={eager:!1,ignoreLinks:!1,includeType:!1,includeMeta:!1},p=o({},d,s),c=p.eager,f=p.includeType,y=p.includeMeta;if(!e[t])return null;if(null===u||Array.isArray(u)){var h=u||Object.keys(e[t]);return h.map(function(r){return a(e,t,r,p,l)})}var m=u.toString(),v=r(t,m),g=l[v];if(g)return g;var b={},k=e[t][m];return k?(k.id&&(b.id=k.id),Object.keys(k.attributes).forEach(function(e){b[e]=k.attributes[e]}),y&&k.meta&&(b.meta=k.meta),f&&!b.type&&(b.type=t),l[v]=b,k.relationships&&Object.keys(k.relationships).forEach(function(t){c?(b[t]=n(e,k,t,p,l),y&&i(b,k,t)):Object.defineProperty(b,t,{enumerable:!0,get:function(){var r="__"+t;return b[r]?b[r]:(b[r]=n(e,k,t,p,l),y&&i(b,k,t),b[r])}})}),"undefined"==typeof b.id&&(b.id=m),b):null}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e};t.default=a}]);